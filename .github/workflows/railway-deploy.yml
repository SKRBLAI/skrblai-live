name: Deploy to Railway

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Railway environment name (informational only)"
        required: false
        default: "production"

permissions:
  contents: read

concurrency:
  group: railway-deploy-production
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NODE_OPTIONS: --max-old-space-size=4096
      SKIP_ENV_VALIDATION: "true"
      # harmless defaults so build wonâ€™t crash if something reads them at build time
      NEXT_PUBLIC_SUPABASE_URL: "https://example.supabase.co"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "anon"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint (non-blocking)
        run: npm run lint -- --fix || true

      - name: Build
        run: npm run build

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Railway context (debug)
        continue-on-error: true
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway --version
          railway whoami || echo "Using RAILWAY_TOKEN from env (no interactive login)"

      - name: Railway link to project
        env:
          RAILWAY_PROJECT_ID: ${{ vars.RAILWAY_PROJECT_ID }}
        run: railway link --project "$RAILWAY_PROJECT_ID"

      - name: Select environment
        env:
          RAILWAY_ENV_ID: ${{ vars.RAILWAY_ENV_ID }}
        run: railway environment --environment "$RAILWAY_ENV_ID"

      - name: Deploy via Railway CLI (non-interactive)
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ vars.RAILWAY_PROJECT_ID }}
          RAILWAY_ENVIRONMENT_ID: ${{ vars.RAILWAY_ENVIRONMENT_ID }}
        run: railway up --ci

      - name: Smoke checks (non-fatal)
        continue-on-error: true
        env:
          BASE_URL: ${{ vars.BASE_URL || 'https://skrblai.io' }}
        run: |
          echo "HEAD / ->" && curl -Isf "$BASE_URL/"        | head -n1
          echo "HEAD /sports ->" && curl -Isf "$BASE_URL/sports" | head -n1
          echo "GET /api/health ->" && curl -s "$BASE_URL/api/health" | head -n1
