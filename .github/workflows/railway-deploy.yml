name: Deploy to Railway

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Railway environment name"
        required: false
        default: "production"
      service:
        description: "Railway service name"
        required: false
        default: "skrbai-live"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # Safe build flags to avoid static-gen crashes & OOMs
      NODE_OPTIONS: --max-old-space-size=4096
      SKIP_ENV_VALIDATION: true
      # Provide harmless defaults for public vars so build won't die if someone imports them at build time
      NEXT_PUBLIC_SUPABASE_URL: "https://example.supabase.co"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "anon"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print context
        run: |
          echo "Actor:   $GITHUB_ACTOR"
          echo "Branch:  $GITHUB_REF"
          echo "SHA:     $GITHUB_SHA"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Lint (non-blocking)
        run: npm run lint -- --fix || true

      - name: Build (safe)
        run: npm run build


      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next
          if-no-files-found: error
          retention-days: 1

      - name: Print env presence (debug)
        run: |
          echo "Has SUPABASE_URL? " ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' }}
          echo "Has SUPABASE_ANON?" ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY != '' }}


      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Print Railway context (debug)
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway --version
          railway whoami || true
          railway status || true
          railway services --json || true

      # If you have ONE service connected to this repo, this is enough:
      - name: Deploy via Railway CLI
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --ci


      - name: Smoke tests
        run: |
          # Use NEXT_PUBLIC_BASE_URL if set, otherwise fallback to https://skrblai.io
          BASE_URL="${NEXT_PUBLIC_BASE_URL:-https://skrblai.io}"
          echo "Testing deployed site: $BASE_URL"
          
          # Healthcheck loop - wait for deployment to be ready
          echo "Waiting for deployment to be ready..."
          for i in {1..30}; do
            if curl -sf "$BASE_URL/api/health" > /dev/null 2>&1; then
              echo "✅ Health check passed on attempt $i"
              break
            fi
            echo "⏳ Health check attempt $i failed, retrying in 10s..."
            sleep 10
            if [ $i -eq 30 ]; then
              echo "❌ Health check timed out after 5 minutes"
              exit 1
            fi
          done
          
          # Test endpoints
          echo "Testing homepage..."
          curl -Isf "$BASE_URL/" | head -n 1
          
          echo "Testing /sports page..."
          curl -Isf "$BASE_URL/sports" | head -n 1
          
          echo "Testing /api/health endpoint..."
          curl -s "$BASE_URL/api/health" | head -n 1
          
          echo "✅ All smoke tests passed!"

      - name: Security scan
        continue-on-error: true
        run: |
          echo "Running security audit (non-blocking)..."
          npm audit --audit-level=critical || true
          echo "Security scan completed (non-blocking)"

      - name: Run smoke tests (non-fatal)
        env:
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL || secrets.NEXT_PUBLIC_BASE_URL || '' }}
        run: |
          echo "Starting smoke tests (non-fatal)"
          npm run test:smoke || true

